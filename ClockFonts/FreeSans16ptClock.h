#ifndef FreeSans16pt7b_H
#define FreeSans16pt7b_H

#ifdef __AVR__
#include <avr/io.h>
#include <avr/pgmspace.h>
#elif defined(ESP8266)
#include <pgmspace.h>
#elif defined(__IMXRT1052__) || defined(__IMXRT1062__)
// PROGMEM is defefind for T4 to place data in specific memory section
#undef PROGMEM
#define PROGMEM
#else
#define PROGMEM
#endif

const uint8_t FreeSans16pt7bBitmaps[] PROGMEM = {
  0x07, 0xC0, 0x3F, 0xE0, 0xFF, 0xE3, 0xE3, 0xE7, 0x01, 0xCE, 0x03, 0xBC,
  0x07, 0xF0, 0x07, 0xE0, 0x0F, 0xC0, 0x1F, 0x80, 0x3F, 0x00, 0x7E, 0x00,
  0xFC, 0x01, 0xF8, 0x03, 0xF0, 0x0F, 0x70, 0x1C, 0xE0, 0x39, 0xF1, 0xF1,
  0xFF, 0xC1, 0xFF, 0x00, 0xF8, 0x00, 0x06, 0x1C, 0x39, 0xFF, 0xFF, 0xC3,
  0x87, 0x0E, 0x1C, 0x38, 0x70, 0xE1, 0xC3, 0x87, 0x0E, 0x1C, 0x38, 0x70,
  0xE1, 0xC0, 0x0F, 0xC0, 0xFF, 0xC7, 0xFF, 0x9E, 0x1E, 0xF0, 0x3F, 0x80,
  0x7E, 0x01, 0xC0, 0x07, 0x00, 0x1C, 0x00, 0xE0, 0x07, 0x80, 0x7C, 0x03,
  0xC0, 0x3E, 0x01, 0xE0, 0x0E, 0x00, 0x70, 0x01, 0x80, 0x0E, 0x00, 0x3F,
  0xFF, 0xFF, 0xFF, 0xFF, 0xF0, 0x0F, 0xC0, 0x7F, 0xE1, 0xFF, 0xE3, 0xC3,
  0xEF, 0x01, 0xDC, 0x03, 0xB8, 0x07, 0x00, 0x0E, 0x00, 0x78, 0x07, 0xE0,
  0x0F, 0x80, 0x1F, 0xC0, 0x03, 0xC0, 0x03, 0xC0, 0x03, 0xF0, 0x07, 0xE0,
  0x0F, 0xE0, 0x3D, 0xE0, 0xF3, 0xFF, 0xE3, 0xFF, 0x01, 0xF8, 0x00, 0x00,
  0x70, 0x01, 0xC0, 0x0F, 0x00, 0x7C, 0x01, 0xF0, 0x0D, 0xC0, 0x77, 0x03,
  0x9C, 0x0C, 0x70, 0x61, 0xC3, 0x87, 0x1C, 0x1C, 0x60, 0x73, 0x01, 0xCF,
  0xFF, 0xFF, 0xFF, 0xFF, 0xFC, 0x01, 0xC0, 0x07, 0x00, 0x1C, 0x00, 0x70,
  0x01, 0xC0, 0x3F, 0xFC, 0x7F, 0xF8, 0xFF, 0xF1, 0xC0, 0x07, 0x00, 0x0E,
  0x00, 0x1C, 0x00, 0x39, 0xF0, 0x7F, 0xF0, 0xFF, 0xF1, 0xC0, 0xF0, 0x00,
  0xF0, 0x00, 0xE0, 0x01, 0xC0, 0x03, 0x80, 0x07, 0xE0, 0x0F, 0xE0, 0x39,
  0xE0, 0xF3, 0xFF, 0xC3, 0xFF, 0x01, 0xF8, 0x00, 0x07, 0xE0, 0x3F, 0xE0,
  0xFF, 0xE1, 0xE1, 0xE7, 0x01, 0xCE, 0x03, 0xB8, 0x00, 0x71, 0xF0, 0xEF,
  0xF1, 0xFF, 0xF3, 0xE0, 0xF7, 0x80, 0xFE, 0x00, 0xFC, 0x01, 0xF8, 0x03,
  0xF0, 0x07, 0x60, 0x0E, 0xE0, 0x39, 0xE0, 0xF1, 0xFF, 0xC1, 0xFF, 0x00,
  0xF8, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xC0, 0x06, 0x00, 0x38, 0x00,
  0xC0, 0x07, 0x00, 0x18, 0x00, 0xC0, 0x07, 0x00, 0x18, 0x00, 0xE0, 0x03,
  0x80, 0x0C, 0x00, 0x70, 0x01, 0xC0, 0x0E, 0x00, 0x38, 0x00, 0xE0, 0x03,
  0x00, 0x1C, 0x00, 0x70, 0x00, 0x07, 0xC0, 0x3F, 0xE0, 0xFF, 0xE3, 0xC1,
  0xE7, 0x01, 0xCE, 0x03, 0x9C, 0x07, 0x1C, 0x1C, 0x1F, 0xF0, 0x1F, 0xC0,
  0xFF, 0xE3, 0xC1, 0xE7, 0x01, 0xDC, 0x01, 0xF8, 0x03, 0xF0, 0x07, 0xE0,
  0x0F, 0xE0, 0x3D, 0xE0, 0xF1, 0xFF, 0xC1, 0xFF, 0x00, 0xF8, 0x00, 0x07,
  0xC0, 0x3F, 0xE0, 0xFF, 0xE3, 0xC1, 0xE7, 0x01, 0xDC, 0x01, 0xB8, 0x03,
  0xF0, 0x07, 0xE0, 0x0F, 0xC0, 0x1F, 0xC0, 0x7B, 0xC1, 0xF3, 0xFF, 0xE3,
  0xFD, 0xC3, 0xE3, 0x80, 0x07, 0x00, 0x1C, 0xE0, 0x39, 0xE1, 0xE3, 0xFF,
  0xC3, 0xFF, 0x01, 0xF8, 0x00, 0xFF, 0x80, 0x00, 0x00, 0x01, 0xFF };

const GFXglyph FreeSans16pt7bGlyphs[] PROGMEM = {
  {     0,  15,  22,  17,    1,  -21 },   // 0x30 '0'
  {    42,   7,  22,  17,    4,  -21 },   // 0x31 '1'
  {    62,  14,  22,  17,    2,  -21 },   // 0x32 '2'
  {   101,  15,  22,  17,    1,  -21 },   // 0x33 '3'
  {   143,  14,  22,  17,    1,  -21 },   // 0x34 '4'
  {   182,  15,  22,  17,    1,  -21 },   // 0x35 '5'
  {   224,  15,  22,  17,    1,  -21 },   // 0x36 '6'
  {   266,  14,  22,  17,    1,  -21 },   // 0x37 '7'
  {   305,  15,  22,  17,    1,  -21 },   // 0x38 '8'
  {   347,  15,  22,  17,    1,  -21 },   // 0x39 '9'
  {   389,   3,  16,   8,    2,  -15 } }; // 0x3A ':'

const GFXfont FreeSans16pt7b PROGMEM = {
  (uint8_t  *)FreeSans16pt7bBitmaps,
  (GFXglyph *)FreeSans16pt7bGlyphs,
  0x30, 0x3A, 38 };

// Approx. 479 bytes

#endif // FreeSans16pt7b_H
